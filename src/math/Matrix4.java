package math;

public class Matrix4 {
    public float[][] m;

    public Matrix4(){
        m = new float[4][4];
    }

    public Matrix4(float v){
        m = new float[4][4];
        m[0][0] = v;
        m[1][1] = v;
        m[2][2] = v;
        m[3][3] = v;
    }

    public void setIdentity(){
        m[0][0] = 1; m[0][1] = 0; m[0][2] = 0; m[0][3] = 0;
        m[1][0] = 0; m[1][1] = 1; m[1][2] = 0; m[1][3] = 0;
        m[2][0] = 0; m[2][1] = 0; m[2][2] = 1; m[2][3] = 0;
        m[3][0] = 0; m[3][1] = 0; m[3][2] = 0; m[3][3] = 1;
    }

    public void translate(Vector3 t){
        m[0][2] += t.x;
        m[1][2] += t.y;
        m[2][2] += t.z;
    }

    public static Matrix4 multiply(Matrix4 m1, Matrix4 m2){
        Matrix4 m = new Matrix4();
        m.m[0][0] = (m1.m[0][0] * m2.m[0][0]) + (m1.m[1][0] * m2.m[0][1]) + (m1.m[2][0] * m2.m[0][2]) + (m1.m[3][0] * m2.m[0][3]);
        m.m[0][1] = (m1.m[0][1] * m2.m[0][0]) + (m1.m[1][1] * m2.m[0][1]) + (m1.m[2][1] * m2.m[0][2]) + (m1.m[3][1] * m2.m[0][3]);
        m.m[0][2] = (m1.m[0][2] * m2.m[0][0]) + (m1.m[1][2] * m2.m[0][1]) + (m1.m[2][2] * m2.m[0][2]) + (m1.m[3][2] * m2.m[0][3]);
        m.m[0][3] = (m1.m[0][3] * m2.m[0][0]) + (m1.m[1][3] * m2.m[0][1]) + (m1.m[2][3] * m2.m[0][2]) + (m1.m[3][3] * m2.m[0][3]);

        m.m[1][0] = (m1.m[0][0] * m2.m[1][0]) + (m1.m[1][0] * m2.m[1][1]) + (m1.m[2][0] * m2.m[1][2]) + (m1.m[3][0] * m2.m[1][3]);
        m.m[1][1] = (m1.m[0][1] * m2.m[1][0]) + (m1.m[1][1] * m2.m[1][1]) + (m1.m[2][1] * m2.m[1][2]) + (m1.m[3][1] * m2.m[1][3]);
        m.m[1][2] = (m1.m[0][2] * m2.m[1][0]) + (m1.m[1][2] * m2.m[1][1]) + (m1.m[2][2] * m2.m[1][2]) + (m1.m[3][2] * m2.m[1][3]);
        m.m[1][3] = (m1.m[0][3] * m2.m[1][0]) + (m1.m[1][3] * m2.m[1][1]) + (m1.m[2][3] * m2.m[1][2]) + (m1.m[3][3] * m2.m[1][3]);

        m.m[2][0] = (m1.m[0][0] * m2.m[2][0]) + (m1.m[1][0] * m2.m[2][1]) + (m1.m[2][0] * m2.m[2][2]) + (m1.m[3][0] * m2.m[2][3]);
        m.m[2][1] = (m1.m[0][1] * m2.m[2][0]) + (m1.m[1][1] * m2.m[2][1]) + (m1.m[2][1] * m2.m[2][2]) + (m1.m[3][1] * m2.m[2][3]);
        m.m[2][2] = (m1.m[0][2] * m2.m[2][0]) + (m1.m[1][2] * m2.m[2][1]) + (m1.m[2][2] * m2.m[2][2]) + (m1.m[3][2] * m2.m[2][3]);
        m.m[2][3] = (m1.m[0][3] * m2.m[2][0]) + (m1.m[1][3] * m2.m[2][1]) + (m1.m[2][3] * m2.m[2][2]) + (m1.m[3][3] * m2.m[2][3]);

        m.m[3][0] = (m1.m[0][0] * m2.m[3][0]) + (m1.m[1][0] * m2.m[3][1]) + (m1.m[2][0] * m2.m[3][2]) + (m1.m[3][0] * m2.m[3][3]);
        m.m[3][1] = (m1.m[0][1] * m2.m[3][0]) + (m1.m[1][1] * m2.m[3][1]) + (m1.m[2][1] * m2.m[3][2]) + (m1.m[3][1] * m2.m[3][3]);
        m.m[3][2] = (m1.m[0][2] * m2.m[3][0]) + (m1.m[1][2] * m2.m[3][1]) + (m1.m[2][2] * m2.m[3][2]) + (m1.m[3][2] * m2.m[3][3]);
        m.m[3][3] = (m1.m[0][3] * m2.m[3][0]) + (m1.m[1][3] * m2.m[3][1]) + (m1.m[2][3] * m2.m[3][2]) + (m1.m[3][3] * m2.m[3][3]);
        return m;
    }

    public static Vector4 multiply(Matrix4 m, Vector4 v1){
        Vector4 v = new Vector4();
        v.x = m.m[0][0] * v1.x + m.m[0][1] * v1.y + m.m[0][2] * v1.z + m.m[0][3] * v1.w;
        v.y = m.m[1][0] * v1.x + m.m[1][1] * v1.y + m.m[1][2] * v1.z + m.m[1][3] * v1.w;
        v.z = m.m[2][0] * v1.x + m.m[2][1] * v1.y + m.m[2][2] * v1.z + m.m[2][3] * v1.w;
        v.w = m.m[3][0] * v1.x + m.m[3][1] * v1.y + m.m[3][2] * v1.z + m.m[3][3] * v1.w;
        return v;
    }

}